version: "3"

vars:
  OPEN_API_CLIENT: ./.venv/bin/openapi-python-client
  RUFF: ./.venv/bin/ruff
  OANDA_API: ./openapi.yaml
  CONFIG: ./openapi-client-config.yml
  UV: uv
  VENV_DIR: .venv
  PYTHON_VERSION: "3.11"

tasks:
  setup-proj:
    dir: oanda-v20-client
    desc: Create virtual environment and install dependencies
    cmds:
      - |
        cat > pyproject.toml << EOF
        [project]
        name = "oanda-v20-client"
        version = "0.0.1"
        description = "A client library for accessing OANDA v20 REST API"
        readme = "README.md"
        requires-python = ">=3.10"
        dependencies = [
            "httpx>=0.20.0,<0.28.0",
            "attrs>=21.3.0",
            "python-dateutil>=2.8.0",
        ]
        [tool.uv]
        dev-dependencies = [
            "ruff>=0.6.4",
          ]
        [build-system]
        requires = [
            "hatchling",
        ]
        build-backend = "hatchling.build"

        [tool.ruff]
        line-length = 120

        [tool.ruff.lint]
        select = ["F", "I", "UP"]
        EOF
      - "{{.UV}} install"

  install_deps:
    desc: Install dependencies
    cmds:
      - "{{.UV}} install"

  check-deps:
    desc: Check if required dependencies are installed
    cmds:
      - test -f {{.OPEN_API_CLIENT}} || { echo "openapi-python-client not found at {{.OPEN_API_CLIENT}}"; exit 1; }
      - test -f {{.OANDA_API}} || { echo "OpenAPI spec not found at {{.OANDA_API}}"; exit 1; }
    silent: true

  convert_api:
    desc: Convert Oanda Swagger API to OpenAPI
    cmds:
      - echo "Converting Oanda Swagger API to OpenAPI..."
      - pnpm install
      - pnpm run convert

  generate:
    desc: Generate Python client from OpenAPI specification
    deps: [install_deps, check-deps]
    cmds:
      - echo "Generating Python client from OpenAPI specification..."
      - "{{.OPEN_API_CLIENT}} generate --path {{.OANDA_API}} --config {{.CONFIG}} --overwrite --meta none"
    sources:
      - openapi.yaml
      - openapi-client-config.yml
    generates:
      - oanda-v20-client/**/*

  build:
    desc: Build the package using UV
    deps: [generate]
    dir: oanda-v20-client
    cmds:
      - rm -rf /dist
      - "{{.UV}} build"

  install:
    desc: Install the package in development mode
    deps: [build]
    dir: oanda-v20-client
    cmds:
      - "{{.UV}} install"

  clean:
    desc: Remove generated client code and build artifacts
    cmds:
      - rm -rf oanda-v20-client
      - rm -rf **/*.egg-info
      - rm -rf **/dist
      - rm -rf **/__pycache__

  lint:
    desc: Run linting on generated code
    deps: [generate]
    dir: oanda-v20-client
    cmds:
      - "{{.RUFF}} check ."
      - "{{.RUFF}} format ."

  default:
    desc: Setup environment, generate and install the client
    cmds:
      - task: setup-venv
      - task: install
